{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Unique name that will be used to generate various other names including the name of the Public IP used to access the Virtual Machine."
      }
    },
    "customerName": {
      "type": "string",
      "metadata": {
        "description": "CustomerName used to create uniquename along with customer tier that will be used to generate various other names including the name of the Public IP used to access the Virtual Machine."
      }
    },
    "customerTier": {
      "type": "string",
      "metadata": {
        "description": " CustomerTier used to create uniquename along with CustomerName that will be used to generate various other names including the name of the Public IP used to access the Virtual Machine."
      }
    },
   "mySqlPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the MySQL 'root' admin user."
      }
    },
    "vmadminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine administrator. Do not use simple names such as 'admin'."
      }
    },
    "vmadminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine administrator."
      }
    },

    "magentoFileBackup": {
      "type": "string",
      "defaultValue": "https://gdc.blob.core.windows.net/autosoez/DeploymentPackages/magento_vamap_va_selector_04-21-2017.tar",


      "metadata": {
        "description": "File backup for Magento Code"
      }
    },
    "magentoMediaBackup": {
      "type": "string",
      "defaultValue": "https://gdc.blob.core.windows.net/autosoez/DeploymentPackages/.media.zip",


      "metadata": {
        "description": "Media folder backup for Magento Code"
      }
    },
    "magentoInitBackup": {
      "type": "string",
      "defaultValue": "https://gdc.blob.core.windows.net/autosoez/DeploymentPackages/.init.tar",


      "metadata": {
        "description": "Init folder backup for Magento Code"  
      }
    },
    "magentoVarBackup": {
      "type": "string",
      "defaultValue": "https://gdc.blob.core.windows.net/autosoez/DeploymentPackages/var.tar",


      "metadata": {
        "description": "Var folder backup for Magento Code"
      }
    },
	 "magentoDefaultHTaccess": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/azmigproject/MagentoOnAzure/master/ExistingPackageDeployment/InstallScripts/.htaccess",


      "metadata": {
        "description": "Default htaccess file"
      }
    },
    "magentoDBBackup": {
      "type": "string",
      "defaultValue": "https://gdc.blob.core.windows.net/autosoez/DeploymentPackages/magento_init.sql.tar",
      "metadata": {
        "description": "Magento DB backup"
      }
    },

    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_L4s",
      "allowedValues": [
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_F2s",
        "Standard_F4s",
        "Standard_F8s",
        "Standard_F16s",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_L16s",
        "Standard_L32s"

      ],
      "metadata": {
        "description": "The size of the VM."
      }
    }
  },
  "variables": {
    "newStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'mds')]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "ubuntuOSVersion": "14.04.5-LTS",
    "uniqueNamePrefix": "[concat(parameters('customerName'),parameters('customerTier'))]",
    "OSDiskName": "[concat(variables('uniqueNamePrefix'),'Disk')]",
    "nicName": "[concat(variables('uniqueNamePrefix'),'Nic')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "magentoUsername": "[concat(variables('uniqueNamePrefix'),'Usr')]",
    "magentoUserPassword": "[concat(variables('uniqueNamePrefix'),'@123')]",
    "magentoFolder": "[concat('MagentoFor',variables('uniqueNamePrefix'))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat(variables('uniqueNamePrefix'),'IP')]",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "vmHOSTURL": "[concat(resourceGroup().location,'.cloudapp.azure.com')]",
    "vmName": "[concat(variables('uniqueNamePrefix'),'VM')]",
    "virtualNetworkName": "[concat(variables('uniqueNamePrefix'),'VNet')]",
    "vmNSGName": "[concat(variables('uniqueNamePrefix'),'Nsg')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "magentoDBToRestore": "magento_init.sql",
    "mysqlDBName": "magento",
    "installScriptName": "InstallMagentoBlank.sh",
    "installScriptUri": "[concat('https://raw.githubusercontent.com/azmigproject/MagentoOnAzure/master/ExistingPackageDeployment/InstallScripts/', variables('installScriptName'))]",
    "installCommand": "[concat('bash  ', variables('installScriptName'), '  ', parameters('domainName'), '  ', variables('magentoFolder'), '  ', variables('magentoUsername'), '  ',  variables('magentoUserPassword'), '  ', parameters('mySqlPassword'), '  ', variables('vmHOSTURL'),'  ', variables('mysqlDBName'),'  ', parameters('magentoFileBackup'),'  ', parameters('magentoDBBackup'),' ',variables('magentoDBToRestore'),'  ', parameters('magentoMediaBackup'),'  ', parameters('magentoInitBackup'),'  ', parameters('magentoVarBackup') ,'  ', parameters('magentoDefaultHTaccess'),' ', parameters('vmadminUsername'),' ', parameters('vmadminPassword'),' ',parameters('customerName'),' ',parameters('customerTier'),' ',resourceGroup().name)]",
    "apiVersion": "2015-06-15"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('newStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('domainName')]"
        }
      }
    },
    {
      "name": "[variables('vmNSGName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowHTTP",
            "properties": {
              "priority": 1010,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "80",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-ssh",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "AllowTCPPOSRTFORMAIL",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*", 
              "destinationPortRange": "587",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('vmNSGName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('vmNSGName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmNSGName'))]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[variables('vmName')]",
          "adminUsername": "[parameters('vmadminUsername')]",
          "adminPassword": "[parameters('vmadminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName')), variables('apiVersion')).primaryEndpoints.blob,variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "diskSizeGB": 360
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/newuserscript')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('installScriptUri')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat(variables('installCommand'))]"
        }
      }
    }
  ],
  "outputs": {
    "installedUrl": {
      "type": "string",
      "value": "[concat('http://',parameters('domainName'),'.',variables('vmHOSTURL'))]"
    },
    "installedUrlAdmin": {
      "type": "string",
      "value": "[concat('http://',parameters('domainName'),'.',variables('vmHOSTURL'),'/zpanel')]"
    },
    "preInstallerString": {
      "type": "string",
      "value": "wget https://raw.githubusercontent.com/azmigproject/MagentoOnAzure/master/ExistingPackageDeployment/InstallScripts/InstallMagento.sh"
    },
    "commandString": {
      "type": "string",
      "value": "[variables('installCommand')]"
    }
  }
}